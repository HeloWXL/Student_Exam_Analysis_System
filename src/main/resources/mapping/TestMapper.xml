<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mac.demo.mapper.TestMapper" >
  <resultMap id="BaseResultMap" type="com.mac.demo.model.Test" >
    <id column="test_id" property="testId" jdbcType="INTEGER" />
    <result column="test_name" property="testName" jdbcType="VARCHAR" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    test_id, test_name, admin_id, time, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from test
    where test_id = #{testId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from test
    where test_id = #{testId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mac.demo.model.Test" >
    insert into test (test_id, test_name, admin_id, 
      time, create_time)
    values (#{testId,jdbcType=INTEGER}, #{testName,jdbcType=VARCHAR}, #{adminId,jdbcType=INTEGER}, 
      #{time,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mac.demo.model.Test" >
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        test_id,
      </if>
      <if test="testName != null" >
        test_name,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="testName != null" >
        #{testName,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mac.demo.model.Test" >
    update test
    <set >
      <if test="testName != null" >
        test_name = #{testName,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mac.demo.model.Test" >
    update test
    set test_name = #{testName,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      time = #{time,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where test_id = #{testId,jdbcType=INTEGER}
  </update>

  <select id="getTest" parameterType="com.mac.demo.vo.TestAdminVo"
          resultType="com.mac.demo.vo.TestAdminVo">

    select t.test_id as testId
    ,t.test_name as testName
    , t.time as time
    , t.create_time as createTime
    ,a.admin_name as adminName
    from test t , admin a
    where t.admin_id = a.admin_id
    <if test="testName != null and testName != ''">
      and t.test_name like concat('%',#{testName}, '%')
    </if>

    LIMIT #{page},#{limit}
  </select>

  <select id="getTestCount" resultType="java.lang.Integer">
    select
    count(1)
    from test t , admin a
    where t.admin_id = a.admin_id
    <if test="testName != null and testName != ''">
      and t.test_name like concat('%',#{testName}, '%')
    </if>

  </select>
</mapper>